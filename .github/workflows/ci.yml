name: MLOps Retrain & Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-train:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: ‚úÖ Run unit tests
      run: pytest tests/

    - name: üßπ Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: ü§ñ Retrain pipeline & save model
      run: |
        python -m src.pipeline.pipeline
        ls -lh artifacts/model.joblib

  docker-build-push:
    needs: build-test-train
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4

    - name: üîë Log in to Docker registry
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: üê≥ Build & push Docker image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/fraud-api:latest .
        docker push ${{ env.DOCKER_USERNAME }}/fraud-api:latest

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

    steps:
    - name: üöÄ Trigger redeploy on Render
      run: |
        curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{"serviceId": "'"$RENDER_SERVICE_ID"'"}' \
          https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
